[pytest]
minversion = 6.0
# addopts = -ra -q --strict-markers -m "not mcp_integration"
addopts = -ra -q --strict-markers
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
# https://stackoverflow.com/questions/4673373/logging-within-pytest-tests
log_cli = 1
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format=%Y-%m-%d %H:%M:%S

markers =
    # Hybrid Search markers
    hybrid_search: Tests for hybrid search functionality
    keyword_parser: Tests for keyword search parser
    search_engine: Tests for hybrid search engine
    backend: Tests for vector store backend functionality
    integration: Integration tests
    unit: Unit tests
    
    # Existing functionality markers  
    ast_chunking: Tests for AST chunking functionality
    haskell: Tests for Haskell language support
    live_updates: Tests for live update functionality
    cli: Tests for command-line interface
    embedding: Tests for embedding functionality
    chunking: Tests for code chunking
    
    # Test categories
    slow: Tests that take longer to run
    external: Tests that require external dependencies
    standalone: Tests that can run independently
    db_integration: Tests that require database integration
    mcp_integration: Tests that require MCP integration
    cocoindex_extension: Tests for cocoindex extension functionality
    timeout: Tests with custom timeouts

[mypy]
check_untyped_defs = true
ignore_missing_imports = false
local_partial_types = false
